# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"(n%100<10 || n%100>=20) ? 1 : 2);\n"

#: api/models.py:16
msgid "slug"
msgstr ""

#: api/templates/api/main.html:7 api/templates/api/main.html:11
msgid "WolneLektury.pl API"
msgstr ""

#: api/templates/api/main.html:21
#, python-format
msgid ""
"\n"
"        WolneLektury.pl API resides under <code>%(u)s</code>.\n"
"        You can use it to access information about books, their fragments "
"and\n"
"        their metadata.\n"
"      "
msgstr ""

#: api/templates/api/main.html:29
msgid ""
"\n"
"        Default data serialization format is\n"
"        <a href=\"http://en.wikipedia.org/wiki/JSON\">JSON</a>,\n"
"        but you can also use XML by appending <code>?format=xml</code>\n"
"        query parameter to each URL.\n"
"      "
msgstr ""

#: api/templates/api/main.html:38
msgid ""
"\n"
"        The URLs in WolneLektury.pl API are:\n"
"      "
msgstr ""

#: api/templates/api/main.html:45
msgid "All books"
msgstr ""

#: api/templates/api/main.html:47
msgid "Audiobooks"
msgstr ""

#: api/templates/api/main.html:49
msgid "DAISY"
msgstr ""

#: api/templates/api/main.html:52
msgid "List of all authors"
msgstr ""

#: api/templates/api/main.html:54
msgid "List of all epochs"
msgstr ""

#: api/templates/api/main.html:56
msgid "List of all genres"
msgstr ""

#: api/templates/api/main.html:58
msgid "List of all kinds"
msgstr ""

#: api/templates/api/main.html:61
msgid "List of all themes"
msgstr ""

#: api/templates/api/main.html:63
msgid "Collections"
msgstr ""

#: api/templates/api/main.html:69
#, python-format
msgid ""
"\n"
"        Each element of those lists contains a link (in a \"href\") "
"attibute\n"
"        which points to individual resource's details, i.e.:\n"
"        <a href=\"%(e1)s\">%(e1)s</a> or\n"
"        <a href=\"%(e2)s\">%(e2)s</a>.\n"
"      "
msgstr ""

#: api/templates/api/main.html:78
#, python-format
msgid ""
"\n"
"        You can combine authors, epochs, genres and kinds to find only books "
"matching\n"
"        those criteria. For instance:\n"
"        <a href=\"%(e)s\">%(e)s</a>.\n"
"      "
msgstr ""

#: api/templates/api/main.html:86
#, python-format
msgid ""
"\n"
"        If you only want top-level books and not all the children, you can "
"use /parent_books/, as in:\n"
"        <a href=\"%(e)s\">%(e)s</a>.\n"
"      "
msgstr ""

#: api/templates/api/main.html:94
#, python-format
msgid ""
"\n"
"        The same way, using also books and themes, you can search for a list "
"of fragments:\n"
"        <a href=\"%(e)s\">%(e)s</a>.\n"
"        Again, each entry has a \"href\" attribute which links to the "
"fragment's details, i.e.:\n"
"        <a href=\"%(f)s\">%(f)s</a>.\n"
"      "
msgstr ""

#: api/templates/oauth/authorize_token.html:6
#: api/templates/oauth/authorize_token.html:10
#: api/templates/oauth/authorize_token.html:13
msgid "Authorize access to Wolne Lektury"
msgstr "Leisti prieigą prie Wolne Lektury interneto svetainės"

#: api/templates/oauth/authorize_token.html:17
#, python-format
msgid ""
"Confirm to authorize access to Wolne Lektury as user <strong>%(user)s</"
"strong>."
msgstr ""
"Patvirtinkite, kad leistute prieigą prie Wolne Lektury interneto svetainės "
"kaip vartotojas <strong>%(user)s</strong>."

#: api/templates/oauth/authorize_token.html:23
msgid "Confirm"
msgstr ""
