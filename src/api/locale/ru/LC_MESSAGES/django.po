# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#: models.py:16
msgid "slug"
msgstr "slug"

#: templates/api/main.html:5
msgid "WolneLektury.pl API"
msgstr "API сервиса WolneLektury.pl"

#: templates/api/main.html:15
#, python-format
msgid ""
"\n"
"        WolneLektury.pl API resides under <code>%(u)s</code>.\n"
"        You can use it to access information about books, their fragments "
"and\n"
"        their metadata.\n"
"      "
msgstr ""

#: templates/api/main.html:23
msgid "API сервиса WolneLektury.pl расположен по адресу <code>%(u)s</code>.\n"
"С его помощью вы можете искать информацию о произведениях, отрывках из них и метаданных ""and\n"
"        Default data serialization format is\n"
"        <a href=\"http://en.wikipedia.org/wiki/JSON\">JSON</a>,\n"
"        but you can also use XML by appending <code>?format=xml</code>\n"
"        query parameter to each URL.\n"
"      "
msgstr "По умолчанию данные сериализуются в формате"
"        <a href=\"http://en.wikipedia.org/wiki/JSON\">JSON</a>,\n"
"        но также можно использовать формат XML требуется добавить параметр <code>?format=xml</code>\n"
"        параметр запроса для каждого URL.\n"
" "

#: templates/api/main.html:32
msgid ""
"\n"
"        The URLs in WolneLektury.pl API are:\n"
"      "
msgstr ""
"\n"
"        API ресурса WolneLektury.pl принадлежат URL:\n"
" "

#: templates/api/main.html:39
msgid "All books"
msgstr "Все произведения"

#: templates/api/main.html:41
msgid "Audiobooks"
msgstr "Аудиокниги"

#: templates/api/main.html:43
msgid "DAISY"
msgstr "DAISY"

#: templates/api/main.html:46
msgid "List of all authors"
msgstr "Список авторов"

#: templates/api/main.html:48
msgid "List of all epochs"
msgstr "Список эпох"

#: templates/api/main.html:50
msgid "List of all genres"
msgstr "Список литературных жанров"

#: templates/api/main.html:52
msgid "List of all kinds"
msgstr "Список видов литературы"

#: templates/api/main.html:55
msgid "List of all themes"
msgstr "Список сюжетов и тем"

#: templates/api/main.html:57
msgid "Collections"
msgstr "Коллекции"

#: templates/api/main.html:63
#, python-format
msgid ""
"\n"
"        Each element of those lists contains a link (in a \"href\") "
"attibute\n"
"        which points to individual resource's details, i.e.:\n"
"        <a href=\"%(e1)s\">%(e1)s</a> or\n"
"        <a href=\"%(e2)s\">%(e2)s</a>.\n"
"      "
msgstr ""
"\n"
"        Каждый элемент списка содержит ссылку (in a \"href\") "
"attibute\n"
"        по которой можно перейти к подробной информации, например:\n"
"        <a href=\"%(e1)s\">%(e1)s</a> or\n"
"        <a href=\"%(e2)s\">%(e2)s</a>.\n"
"      "
#: templates/api/main.html:72
#, python-format
msgid ""
"\n"
"        You can combine authors, epochs, genres and kinds to find only books "
"matching\n"
"        those criteria. For instance:\n"
"        <a href=\"%(e)s\">%(e)s</a>.\n"
"      "
msgstr ""
"\n"
"        Можно сочетать авторов, эпохи, жанры и виды для поиска книги"
"matching\n"
"        Отвечающие заданным критериям. например:\n"
"        <a href=\"%(e)s\">%(e)s</a>.\n"
"      "

#: templates/api/main.html:80
#, python-format
msgid ""
"\n"
"        If you only want top-level books and not all the children, you can "
"use /parent_books/, as in:\n"
"        <a href=\"%(e)s\">%(e)s</a>.\n"
"      "
msgstr ""
"\n"
"        Чтобы из списка всех релевантных выбрать наиболее точно отвечающие критериям, вы можете "
"можно задавать вопросы/parent_books/, например:\n"
"        <a href=\"%(e)s\">%(e)s</a>.\n"
"      "

#: templates/api/main.html:88
#, python-format
msgid ""
"\n"
"        The same way, using also books and themes, you can search for a list "
"of fragments:\n"
"        <a href=\"%(e)s\">%(e)s</a>.\n"
"        Again, each entry has a \"href\" attribute which links to the "
"fragment's details, i.e.:\n"
"        <a href=\"%(f)s\">%(f)s</a>.\n"
"      "
msgstr ""
"\n"
"        Тем же способом, используя выбирая книги или сюжеты, можно искать в списке"
"по фрагментам:\n"
"        <a href=\"%(e)s\">%(e)s</a>.\n"
"        Каждый элемент найденного списка \"href\" содержит ссылку, ведущую к"
"подробному описанию, например:\n"
"        <a href=\"%(f)s\">%(f)s</a>.\n"
"      "

#: templates/oauth/authorize_token.html:4
#: templates/oauth/authorize_token.html:7
msgid "Authorize access to Wolne Lektury"
msgstr "Авторизация доступа к Wolne Lektury"

#: templates/oauth/authorize_token.html:11
#, python-format
msgid ""
"Confirm to authorize access to Wolne Lektury as user <strong>%(user)s</"
"strong>."
msgstr ""
"Подтверждение для авторизации доступа к Wolne Lektury как пользователь "
"<strong>%(user)s </strong>."

#: templates/oauth/authorize_token.html:17
msgid "Confirm"
msgstr "Подтверждаю"
